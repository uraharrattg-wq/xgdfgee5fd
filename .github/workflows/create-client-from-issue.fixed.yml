name: Create client from Issue (fixed)

on:
  issues:
    types: [opened]

jobs:
  create-from-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Show event info
        run: |
          echo "Issue opened: ${{ github.event.issue.title }}"
          echo "From repo: $GITHUB_REPOSITORY"

      - name: Parse issue body and create repo from template
        env:
          TEMPLATE_PAT: ${{ secrets.TEMPLATE_PAT }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          ISSUE_BODY: ${{ toJson(github.event.issue.body) }}
        run: |
          #!/bin/bash
          set -euo pipefail
          body=$(printf "%s" "$ISSUE_BODY" | sed -e 's/^"//' -e 's/"$//' | sed 's/\\n/\n/g')
          echo "Parsed body:\n$body"

          get_field(){
            echo "$body" | grep -i "^$1:" | sed -E "s/^$1:[[:space:]]*//I" | sed -e 's/"/\\"/g'
          }

          owner=$(get_field owner || true)
          repo=$(get_field repo || true)

          if [ -z "$owner" ] || [ -z "$repo" ]; then
            echo "Missing owner or repo in Issue body." >&2
            exit 1
          fi

          url="https://api.github.com/repos/$GITHUB_REPOSITORY/generate"
          payload=$(jq -n --arg name "$repo" --arg owner "$owner" '{name:$name, owner:$owner, private:false}')

          resp=$(curl -s -w "\n%{http_code}" -X POST -H "Authorization: token $TEMPLATE_PAT" -H "Accept: application/vnd.github.baptiste-preview+json" -d "$payload" "$url")
          http=$(echo "$resp" | tail -n1)

          if [ "$http" -ge 200 ] && [ "$http" -lt 300 ]; then
            echo "Repository created"
          else
            echo "Failed to create repository (HTTP $http)" >&2
            exit 1
          fi
